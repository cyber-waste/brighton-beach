version = '0.1'

apply plugin: 'java'
sourceCompatibility = 1.7

tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compile "commons-lang:commons-lang:2.6"
    compile "commons-fileupload:commons-fileupload:1.2.2"
    compile "commons-io:commons-io:2.2"
    
    compile "javax:javaee-web-api:6.0"
    compile "org.springframework:spring-webmvc:3.1.2.RELEASE"
    compile "org.springframework.webflow:spring-webflow:2.3.1.RELEASE"
    compile "org.springframework.webflow:spring-faces:2.3.1.RELEASE"
    
    compile "org.springframework.security:spring-security-web:3.1.2.RELEASE"
    compile "org.springframework.security:spring-security-config:3.1.2.RELEASE"
    
    compile "org.springframework:spring-expression:3.1.2.RELEASE"
    compile "org.springframework:spring-beans:3.1.2.RELEASE"
    compile "org.springframework:spring-core:3.1.2.RELEASE"
    compile "org.springframework:spring-context:3.1.2.RELEASE"
    compile "org.springframework:spring-aop:3.1.2.RELEASE"
    
    compile "org.springframework:spring-jdbc:3.1.2.RELEASE"
    compile "org.springframework:spring-orm:3.1.2.RELEASE"
    compile "org.springframework:spring-tx:3.1.2.RELEASE"
    compile "org.springframework.data:spring-data-jpa:1.2.0.RELEASE"
    
    compile "org.hibernate:hibernate-entitymanager:3.6.10.Final"
    compile "org.hibernate:hibernate-validator:4.3.0.Final"
    compile "org.hibernate:hibernate-jpamodelgen:1.2.0.Final"
    compile "mysql:mysql-connector-java:5.1.27"
    compile "commons-dbcp:commons-dbcp:1.4"
    
    compile "com.sun.faces:jsf-api:2.1.12"
    compile "com.sun.faces:jsf-impl:2.1.12"
    compile "org.primefaces:primefaces:4.0"
    compile "org.primefaces.themes:blitzer:1.0.10"
    
    compile "org.slf4j:slf4j-api:1.6.6"
    compile "ch.qos.logback:logback-classic:1.0.6"
}

repositories {
    mavenCentral()
    maven { 
        url "http://repo.spring.io/libs-release"
    }
    maven {
        url "http://repository.primefaces.org"
    }
}

apply plugin: 'war'

war {
    archiveName 'brighton-beach.war'
}

task deploy(type:Exec) {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'src\\build\\bat\\deploy.bat'
    } else {
        commandLine 'sh', 'src/build/shell/deploy.sh'
    }
}
deploy.dependsOn build

task start(type:Exec) {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'src\\build\\bat\\start.bat'
    } else {
        commandLine 'sh', 'src/build/shell/start.sh'
    }
}
start.dependsOn deploy
