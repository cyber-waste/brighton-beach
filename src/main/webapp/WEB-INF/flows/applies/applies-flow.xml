<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="
          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
          
          start-state="applies">
    
    <secured match="any" attributes="ROLE_USER,ROLE_ADMIN"/>
    
    <var name="flowScope.selectedApply" class="cyberwaste.brightonbeach.domain.Apply" />
    
    <input name="inputExactCard" required="false" type="cyberwaste.brightonbeach.domain.Card" />
    <input name="inputName" required="false" type="java.lang.String" />
    
    <on-start>
        <set name="flowScope.exactCard" value="inputExactCard" />
        <set name="flowScope.filteringCardName" value="inputExactCard != null ? inputExactCard.name : inputName" />
        
        <set 
            name="flowScope.specification" 
            value="T(cyberwaste.brightonbeach.specification.ApplySpecifications).where(flowScope.exactCard, flowScope.filteringName)" />
    </on-start>
    
    <view-state id="applies">
        <on-entry>
            <set name="flowScope.selectedObject" value="null" />
            
            <set name="flowScope.filteringCardName" value="flowScope.exactCard != null ? flowScope.exactCard.name : flowScope.filteringCardName" />
            <evaluate expression="applyService.lazyModel(flowScope.specification)" result="flowScope.specifiedLazyModel" />
        </on-entry>
        
        <transition on="applyFilter" to="applies">
            <set 
                name="flowScope.specification" 
                value="T(cyberwaste.brightonbeach.specification.ApplySpecifications).where(flowScope.exactCard, flowScope.filteringCardName)" />
        </transition>
        
        <transition on="cancelFiltering" to="applies">
            <set name="flowScope.exactCard" value="null" />
            <set name="flowScope.specification" value="T(cyberwaste.brightonbeach.specification.ApplySpecifications).any()" />
            <set name="flowScope.filteringCardName" value="''" />
        </transition>
        
        <transition on="objectSummary" to="applySummary" />
        <transition on="parentSummary" to="cardOfApply" />
    </view-state>
    
    <subflow-state id="applySummary" subflow="applySummary">
        <input name="apply" value="flowScope.selectedObject" />
        <transition to="applies" />
    </subflow-state>
    
    <subflow-state id="cardOfApply" subflow="cardSummary">
        <input name="card" value="flowScope.selectedObject.card" />
        <transition to="applies" />
    </subflow-state>
    
</flow>